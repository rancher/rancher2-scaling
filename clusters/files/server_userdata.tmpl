#cloud-config
ssh_authorized_keys:
# Add your ssh key here
write_files:
- path: /usr/local/bin/k3svalidation.sh
  permissions: '0700'
  content: |
    #!/bin/bash
    declare -i i; i=0
    until k3d get-kubeconfig --name='k3s-default'
    do
      if (( i > 20 )); then
        break
      fi

      sleep 2
      i+=1
    done
runcmd:
- echo "net.ipv4.ip_local_port_range = 15000 61000" >> /etc/sysctl.conf
- echo "fs.file-max = 12000500" >> /etc/sysctl.conf
- echo "fs.nr_open = 20000500" >> /etc/sysctl.conf
- echo "net.ipv4.tcp_mem = 10000000 10000000 10000000" >> /etc/sysctl.conf
- sysctl -w net.core.rmem_max=8388608
- sysctl -w net.core.wmem_max=8388608
- sysctl -w net.core.rmem_default=65536
- sysctl -w net.core.wmem_default=65536
- sysctl -w net.ipv4.tcp_rmem='4096 87380 8388608'
- sysctl -w net.ipv4.tcp_wmem='4096 65536 8388608'
- sysctl -w net.ipv4.tcp_mem='8388608 8388608 8388608'
- sysctl -w net.ipv4.route.flush=1
- ulimit -n 20000000
- echo "# <domain> <type> <item>  <value>" >> /etc/security/limits.d/limits.conf
- echo "    *       soft  nofile  20000000" >> /etc/security/limits.d/limits.conf
- echo "    *       hard  nofile  20000000" >> /etc/security/limits.d/limits.conf
- sysctl -p
- apt-get update
- apt-get install -y vim software-properties-common resolvconf linux-headers-$(uname -r)
- echo "nameserver 1.1.1.1" > /etc/resolvconf/resolv.conf.d/tail
- systemctl start resolvconf
- curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
- add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
- apt-get update
- apt-get -y install docker-ce
# - DEBIAN_FRONTEND=noninteractive apt-get upgrade -y
- curl -s https://raw.githubusercontent.com/rancher/k3d/master/install.sh | bash
- curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
- chmod +x ./kubectl
- mv ./kubectl /usr/local/bin/kubectl
- sleep 5
%{ for cluster_instance in range(cluster_count) ~}
- k3d create -n "k3s-cluster-${cluster_instance}" --api-port "${cluster_instance + 30000}" --image "rancher/k3s:v1.0.0"
- /usr/local/bin/k3svalidation.sh
- KUBECONFIG=$(k3d get-kubeconfig --name=k3s-cluster-${cluster_instance}) bash -c '${registration_commands[cluster_instance]}'
%{ endfor ~}
